security:
    encoders:
        App\Entity\User:
            algorithm: bcrypt
        App\Entity\Admin:
             algorithm: bcrypt
             
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        chain_provider:
            chain:
                providers: [user_db, admin_db]
        user_db:
            entity: 
                class: App\Entity\User
                property: username 
        admin_db:
            entity: 
                class: App\Entity\Admin
                property: username
        
    role_hierarchy:
        ROLE_ADMIN: [ROLE_ADMIN, ROLE_USER]

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
            
        main:
            anonymous: true
            provider: chain_provider

            json_login:
                check_path: security_login 
            
            logout:
                path: security_logout 
                target : logout-message

                # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/client, roles: ROLE_USER }
        - { path: ^/phone, roles: ROLE_ADMIN, methods: [POST, PUT, DELETE] }
        - { path: ^/phone, roles: ROLE_USER, methods: [GET] }
        - { path: ^/user, roles: ROLE_ADMIN, methods: [POST, DELETE]}
        - { path: ^/user, roles: ROLE_USER, methods: [PUT]}
